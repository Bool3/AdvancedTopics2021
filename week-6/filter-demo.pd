#N canvas 279 25 830 833 12;
#X declare -path bsaylor;
#X obj 35 18 midi_in;
#X obj 30 177 oscillator_carrier_4~;
#X obj 15 526 audio_output_st~;
#X obj 20 365 adsr~;
#X obj 188 177 oscillator_carrier_4~;
#X obj 373 26 declare -path bsaylor;
#X obj 376 157 window-sinc-kernel-generator~ 1;
#X obj 202 476 partconv~ 1-ws-kernel 64;
#X msg 201 451 set 1-ws-kernel;
#X obj 769 400 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 381 683 hsl 128 15 0 3000 0 0 empty empty cutoff_(Hz) -2 -8
0 10 -262144 -1 -1 0 1;
#X obj 126 339 *~ 0.5;
#X obj 312 744 vcf~;
#X obj 384 716 hsl 128 15 1 10 0 0 empty empty resonance -2 -8 0 10
-262144 -1 -1 0 1;
#X text 366 65 note represents MIDI note;
#X text 371 92 need to increase velocity and note to hear sound;
#X text 192 340 try picking other waves;
#X text 404 134 remember to generate kernel -- M = 64 is good;
#X text 455 395 need to regen when you change cutoff;
#X obj 198 499 *~ 0;
#X obj 465 572 hradio 30 1 0 2 empty empty empty 0 -8 0 10 -232576
-1 -1 0;
#X obj 272 784 *~ 0;
#X obj 206 731 expr 1 - $f1;
#X obj 462 461 loadbang;
#X msg 416 478 0;
#X msg 464 506 1;
#X text 538 569 left: resonant recursive filter;
#X text 538 586 right: my kernel;
#X text 446 647 controls for resonant recursive filter:;
#X text 180 620 don't blow your ears out;
#X text 182 601 <- output controls;
#X connect 0 0 1 0;
#X connect 0 0 4 0;
#X connect 0 0 3 0;
#X connect 1 0 11 0;
#X connect 3 0 7 0;
#X connect 3 0 12 0;
#X connect 4 0 11 0;
#X connect 6 2 9 0;
#X connect 7 0 19 0;
#X connect 8 0 7 0;
#X connect 9 0 8 0;
#X connect 10 0 12 1;
#X connect 11 0 3 1;
#X connect 12 1 21 0;
#X connect 13 0 12 2;
#X connect 19 0 2 0;
#X connect 19 0 2 1;
#X connect 20 0 22 0;
#X connect 20 0 19 1;
#X connect 21 0 2 1;
#X connect 21 0 2 0;
#X connect 22 0 21 1;
#X connect 23 0 24 0;
#X connect 23 0 25 0;
#X connect 24 0 10 0;
#X connect 25 0 13 0;
#X connect 25 0 20 0;
